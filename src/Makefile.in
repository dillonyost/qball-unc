# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#-------------------------------------------------------------------------------
# $Id: Makefile,v 1.46 2010/08/26 17:44:16 draeger1 Exp $
#------------------------------------------------------------------------------
#
# Get name of architecture-specific include file from hostname



VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = qball$(EXEEXT) qball-nruns$(EXEEXT) \
	qball-setupkpts$(EXEEXT) qballdiff$(EXEEXT) \
	xmlSpecies$(EXEEXT) xmlget$(EXEEXT) xmlextract$(EXEEXT) \
	testMatrix$(EXEEXT) testBasis$(EXEEXT) testRowBcast$(EXEEXT) \
	testFourierTransform$(EXEEXT) testBlas$(EXEEXT) \
	testGram$(EXEEXT) testGramBlock$(EXEEXT) testPgemm$(EXEEXT) \
	testPgemmBlock$(EXEEXT) testPzheev$(EXEEXT) \
	testEigenSolvers$(EXEEXT) testEigenBlock$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(include_HEADERS) $(noinst_HEADERS) \
	ChangeLog
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_openmp.m4 \
	$(top_srcdir)/m4/blacs.m4 $(top_srcdir)/m4/blas.m4 \
	$(top_srcdir)/m4/fft.m4 $(top_srcdir)/m4/lapack.m4 \
	$(top_srcdir)/m4/massv.m4 $(top_srcdir)/m4/pthread.m4 \
	$(top_srcdir)/m4/scalapack.m4 $(top_srcdir)/m4/xerces.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libqbLink_a_AR = $(AR) $(ARFLAGS)
libqbLink_a_LIBADD =
am_libqbLink_a_OBJECTS = AtomSet.$(OBJEXT) Atom.$(OBJEXT) \
	SymmetrySet.$(OBJEXT) Symmetry.$(OBJEXT) Species.$(OBJEXT) \
	Wavefunction.$(OBJEXT) SlaterDet.$(OBJEXT) \
	EnergyFunctional.$(OBJEXT) ElectricEnthalpy.$(OBJEXT) \
	SampleStepper.$(OBJEXT) Basis.$(OBJEXT) \
	FourierTransform.$(OBJEXT) Matrix.$(OBJEXT) Context.$(OBJEXT) \
	sinft.$(OBJEXT) Spline.$(OBJEXT) UnitCell.$(OBJEXT) \
	StructureFactor.$(OBJEXT) ChargeDensity.$(OBJEXT) \
	UserInterface.$(OBJEXT) RunCmd.$(OBJEXT) LoadCmd.$(OBJEXT) \
	SaveCmd.$(OBJEXT) SavesysCmd.$(OBJEXT) SavedenCmd.$(OBJEXT) \
	SpeciesCmd.$(OBJEXT) SpeciesReader.$(OBJEXT) \
	SpeciesHandler.$(OBJEXT) XCPotential.$(OBJEXT) \
	LDAFunctional.$(OBJEXT) PBEFunctional.$(OBJEXT) \
	PBESolFunctional.$(OBJEXT) PBERevFunctional.$(OBJEXT) \
	BLYPFunctional.$(OBJEXT) NonLocalPotential.$(OBJEXT) \
	SampleReader.$(OBJEXT) SampleWriter.$(OBJEXT) \
	StructuredDocumentHandler.$(OBJEXT) SampleHandler.$(OBJEXT) \
	AtomSetHandler.$(OBJEXT) WavefunctionHandler.$(OBJEXT) \
	XMLGFPreprocessor.$(OBJEXT) Base64Transcoder.$(OBJEXT) \
	CPSampleStepper.$(OBJEXT) BOSampleStepper.$(OBJEXT) \
	ParOptCmd.$(OBJEXT) ParallelOptimizer.$(OBJEXT) \
	WavefunctionStepper.$(OBJEXT) SDWavefunctionStepper.$(OBJEXT) \
	MDWavefunctionStepper.$(OBJEXT) SDIonicStepper.$(OBJEXT) \
	MDIonicStepper.$(OBJEXT) BMDIonicStepper.$(OBJEXT) \
	PSDWavefunctionStepper.$(OBJEXT) \
	PSDAWavefunctionStepper.$(OBJEXT) \
	JDWavefunctionStepper.$(OBJEXT) SDCellStepper.$(OBJEXT) \
	ConfinementPotential.$(OBJEXT) Preconditioner.$(OBJEXT) \
	SimpleConvergenceDetector.$(OBJEXT) MMSpecies.$(OBJEXT) \
	EmpiricalPotential.$(OBJEXT) EnthalpyFunctional.$(OBJEXT) \
	Hugoniostat.$(OBJEXT) release.$(OBJEXT) qbox_xmlns.$(OBJEXT) \
	isodate.$(OBJEXT) ComputeMLWFCmd.$(OBJEXT) \
	BasisMapping.$(OBJEXT) MLWFTransform.$(OBJEXT) \
	TDMLWFTransform.$(OBJEXT) \
	jacobi_eigenvalue.$(OBJEXT) jade.$(OBJEXT) jade_complex.$(OBJEXT) \
	ConstraintSet.$(OBJEXT) Constraint.$(OBJEXT) \
	DistanceConstraint.$(OBJEXT) PositionConstraint.$(OBJEXT) \
	AngleConstraint.$(OBJEXT) TorsionConstraint.$(OBJEXT) \
	SaveESPCmd.$(OBJEXT) AndersonMixer.$(OBJEXT) \
	SDAIonicStepper.$(OBJEXT) CGIonicStepper.$(OBJEXT) \
	jacobi.$(OBJEXT) HubbardPotential.$(OBJEXT) \
	SphericalIntegration.$(OBJEXT) PrintMem.$(OBJEXT) \
	PlotCmd.$(OBJEXT) SOTDWavefunctionStepper.$(OBJEXT) \
	SORKTDWavefunctionStepper.$(OBJEXT) \
	FORKTDWavefunctionStepper.$(OBJEXT) \
	TDEULERWavefunctionStepper.$(OBJEXT) \
	EhrenSampleStepper.$(OBJEXT) MDSaveCmd.$(OBJEXT) \
	FCPStepper.$(OBJEXT) ExponentialWavefunctionStepper.$(OBJEXT) \
	SelfConsistentPotential.$(OBJEXT) clooper.$(OBJEXT) \
	qbLink.$(OBJEXT)
libqbLink_a_OBJECTS = $(am_libqbLink_a_OBJECTS)
PROGRAMS = $(bin_PROGRAMS)
am_qball_OBJECTS = qb.$(OBJEXT)
qball_OBJECTS = $(am_qball_OBJECTS)
qball_DEPENDENCIES = libqbLink.a
am_qball_nruns_OBJECTS = qb-nruns.$(OBJEXT)
qball_nruns_OBJECTS = $(am_qball_nruns_OBJECTS)
qball_nruns_DEPENDENCIES = libqbLink.a
am_qball_setupkpts_OBJECTS = qb-setupkpts.$(OBJEXT) SymOpSet.$(OBJEXT) \
	SymOp.$(OBJEXT)
qball_setupkpts_OBJECTS = $(am_qball_setupkpts_OBJECTS)
qball_setupkpts_DEPENDENCIES = libqbLink.a
am_qballdiff_OBJECTS = qbdiff.$(OBJEXT)
qballdiff_OBJECTS = $(am_qballdiff_OBJECTS)
qballdiff_LDADD = $(LDADD)
am_testBasis_OBJECTS = testBasis.$(OBJEXT) Basis.$(OBJEXT) \
	UnitCell.$(OBJEXT) Context.$(OBJEXT)
testBasis_OBJECTS = $(am_testBasis_OBJECTS)
testBasis_LDADD = $(LDADD)
am_testBlas_OBJECTS = testBlas.$(OBJEXT)
testBlas_OBJECTS = $(am_testBlas_OBJECTS)
testBlas_LDADD = $(LDADD)
am_testEigenBlock_OBJECTS = testEigenBlock.$(OBJEXT) Matrix.$(OBJEXT) \
	Context.$(OBJEXT) jacobi.$(OBJEXT)
testEigenBlock_OBJECTS = $(am_testEigenBlock_OBJECTS)
testEigenBlock_LDADD = $(LDADD)
am_testEigenSolvers_OBJECTS = testEigenSolvers.$(OBJEXT) \
	Matrix.$(OBJEXT) Context.$(OBJEXT) jacobi.$(OBJEXT)
testEigenSolvers_OBJECTS = $(am_testEigenSolvers_OBJECTS)
testEigenSolvers_LDADD = $(LDADD)
am_testFourierTransform_OBJECTS = testFourierTransform.$(OBJEXT) \
	FourierTransform.$(OBJEXT) Basis.$(OBJEXT) UnitCell.$(OBJEXT) \
	Context.$(OBJEXT)
testFourierTransform_OBJECTS = $(am_testFourierTransform_OBJECTS)
testFourierTransform_LDADD = $(LDADD)
am_testGram_OBJECTS = testGram.$(OBJEXT) Matrix.$(OBJEXT) \
	Context.$(OBJEXT)
testGram_OBJECTS = $(am_testGram_OBJECTS)
testGram_LDADD = $(LDADD)
am_testGramBlock_OBJECTS = testGramBlock.$(OBJEXT) Matrix.$(OBJEXT) \
	Context.$(OBJEXT)
testGramBlock_OBJECTS = $(am_testGramBlock_OBJECTS)
testGramBlock_LDADD = $(LDADD)
am_testMatrix_OBJECTS = testMatrix.$(OBJEXT) Matrix.$(OBJEXT) \
	Context.$(OBJEXT)
testMatrix_OBJECTS = $(am_testMatrix_OBJECTS)
testMatrix_LDADD = $(LDADD)
am_testPgemm_OBJECTS = testPgemm.$(OBJEXT) Matrix.$(OBJEXT) \
	Context.$(OBJEXT)
testPgemm_OBJECTS = $(am_testPgemm_OBJECTS)
testPgemm_LDADD = $(LDADD)
am_testPgemmBlock_OBJECTS = testPgemmBlock.$(OBJEXT) Matrix.$(OBJEXT) \
	Context.$(OBJEXT)
testPgemmBlock_OBJECTS = $(am_testPgemmBlock_OBJECTS)
testPgemmBlock_LDADD = $(LDADD)
am_testPzheev_OBJECTS = testPzheev.$(OBJEXT) Matrix.$(OBJEXT) \
	Context.$(OBJEXT)
testPzheev_OBJECTS = $(am_testPzheev_OBJECTS)
testPzheev_LDADD = $(LDADD)
am_testRowBcast_OBJECTS = testRowBcast.$(OBJEXT) Context.$(OBJEXT)
testRowBcast_OBJECTS = $(am_testRowBcast_OBJECTS)
testRowBcast_LDADD = $(LDADD)
am_xmlSpecies_OBJECTS = xmlSpecies.$(OBJEXT) qbox_xmlns.$(OBJEXT)
xmlSpecies_OBJECTS = $(am_xmlSpecies_OBJECTS)
xmlSpecies_LDADD = $(LDADD)
am_xmlextract_OBJECTS = xmlextract.$(OBJEXT)
xmlextract_OBJECTS = $(am_xmlextract_OBJECTS)
xmlextract_LDADD = $(LDADD)
am_xmlget_OBJECTS = xmlget.$(OBJEXT)
xmlget_OBJECTS = $(am_xmlget_OBJECTS)
xmlget_LDADD = $(LDADD)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libqbLink_a_SOURCES) $(qball_SOURCES) \
	$(qball_nruns_SOURCES) $(qball_setupkpts_SOURCES) \
	$(qballdiff_SOURCES) $(testBasis_SOURCES) $(testBlas_SOURCES) \
	$(testEigenBlock_SOURCES) $(testEigenSolvers_SOURCES) \
	$(testFourierTransform_SOURCES) $(testGram_SOURCES) \
	$(testGramBlock_SOURCES) $(testMatrix_SOURCES) \
	$(testPgemm_SOURCES) $(testPgemmBlock_SOURCES) \
	$(testPzheev_SOURCES) $(testRowBcast_SOURCES) \
	$(xmlSpecies_SOURCES) $(xmlextract_SOURCES) $(xmlget_SOURCES)
DIST_SOURCES = $(libqbLink_a_SOURCES) $(qball_SOURCES) \
	$(qball_nruns_SOURCES) $(qball_setupkpts_SOURCES) \
	$(qballdiff_SOURCES) $(testBasis_SOURCES) $(testBlas_SOURCES) \
	$(testEigenBlock_SOURCES) $(testEigenSolvers_SOURCES) \
	$(testFourierTransform_SOURCES) $(testGram_SOURCES) \
	$(testGramBlock_SOURCES) $(testMatrix_SOURCES) \
	$(testPgemm_SOURCES) $(testPgemmBlock_SOURCES) \
	$(testPzheev_SOURCES) $(testRowBcast_SOURCES) \
	$(xmlSpecies_SOURCES) $(xmlextract_SOURCES) $(xmlget_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS) $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCLIBS = @FCLIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBS_BLACS = @LIBS_BLACS@
LIBS_BLAS = @LIBS_BLAS@
LIBS_LAPACK = @LIBS_LAPACK@
LIBS_SCALAPACK = @LIBS_SCALAPACK@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POW_LIB = @POW_LIB@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XERCES_CPPFLAGS = @XERCES_CPPFLAGS@
XERCES_LDFLAGS = @XERCES_LDFLAGS@
XERCES_LIBS = @XERCES_LIBS@
XERCES_VERSION = @XERCES_VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LIBRARIES = \
	libqbLink.a

include_HEADERS = \
	qbLink.h

noinst_HEADERS = \
	AndersonMixer.h                     \
	AngleCmd.h                          \
	AngleConstraint.h                   \
	AtomCmd.h                           \
	Atom.h                              \
	AtomsDyn.h                          \
	AtomSet.h                           \
	AtomSetHandler.h                    \
	Base64Transcoder.h                  \
	Basis.h                             \
	BasisMapping.h                      \
	blacs.h                             \
	blas.h                              \
	BLYPFunctional.h                    \
	BMDIonicStepper.h                   \
	BOSampleStepper.h                   \
	CellDyn.h                           \
	Cell.h                              \
	CellLock.h                          \
	CellMass.h                          \
	CellStepFreq.h                      \
	CellStepper.h                       \
	CenterOfMass.h                      \
	CGIonicStepper.h                    \
	ChargeDensity.h                     \
	ChargeMixCoeff.h                    \
	ChargeMixing.h                      \
	ChargeMixNdim.h                     \
	ChargeMixRcut.h                     \
	ClebschGordan.h                     \
	clooper.h                           \
	ComputeMLWFCmd.h                    \
	ConfinementPotential.h              \
	ConstraintCmd.h                     \
	Constraint.h                        \
	ConstraintSet.h                     \
	Context.h                           \
	Control.h                           \
	ConvergenceDetector.h               \
	CPSampleStepper.h                   \
	D3vector.h                          \
	D3tensor.h			    \
	Debug.h                             \
	DistanceCmd.h                       \
	DistanceConstraint.h                \
	Dt.h                                \
	Ecutden.h                           \
	Ecut.h                              \
	Ecutprec.h                          \
	Ecuts.h                             \
	Efield.h			    \
	EhrenSampleStepper.h                \
	ElectricEnthalpy.h		    \
	Emass.h                             \
	EmpiricalPotentialCmd.h             \
	EmpiricalPotential.h                \
	EnergyFunctional.h                  \
	EnthalpyFunctional.h                \
	EnthalpyPressure.h                  \
	EnthalpyThreshold.h                 \
	EsmBC.h                             \
	EsmW.h                              \
	ExponentialWavefunctionStepper.h    \
	ExtStress.h                         \
	FcpMu.h                             \
	FcpPmass.h                          \
	FCPStepper.h                        \
	FcpThemostat.h                      \
	FcpThermostat.h                     \
	FcpThTemp.h                         \
	FcpThTime.h                         \
	FcpThWidth.h                        \
	FermiTemp.h                         \
	FoldInWsCmd.h                       \
	Force_Complex_WF.h                  \
	FORKTDWavefunctionStepper.h         \
	FOTDWavefunctionStepper.h           \
	FourierTransform.h                  \
	HelpCmd.h                           \
	HubbardPotential.h                  \
	HubbardU.h                          \
	HugDeltaTemp.h                      \
	HugFreq.h                           \
	Hugoniostat.h                       \
	HugoniostatVar.h                    \
	IonicStepper.h                      \
	IPrint.h                            \
	isodate.h                           \
	jacobi.h                            \
	jacobi_eigenvalue.h		    \
	jade.h                              \
	jade_complex.h			    \
	JDWavefunctionStepper.h             \
	KpointCmd.h                         \
	LDAFunctional.h                     \
	LineMinimizer.h                     \
	ListAtomsCmd.h                      \
	ListConstraintsCmd.h                \
	ListSpeciesCmd.h                    \
	LoadCmd.h                           \
	LoaddenCmd.h                        \
	LockCmd.h                           \
	Matrix.h                            \
	MatrixLoc.h                         \
	MDIonicStepper.h                    \
	MDIter.h                            \
	MDSaveCmd.h                         \
	MDWavefunctionStepper.h             \
	Memory.h                            \
	MLWFTransform.h                     \
	TDMLWFTransform.h		    \
	MMAtomCmd.h                         \
	MMSpeciesCmd.h                      \
	MMSpecies.h                         \
	NameOf.h                            \
	NA_overlaps.h                       \
	Nempty.h                            \
	NetCharge.h                         \
	Nkpoints.h                          \
	NonLocalPotential.h                 \
	NonLocalPotential.save.h            \
	Non_Selfconsistent_Energy_Output.h  \
	Nparallelkpts.h                     \
	Nrowmax.h                           \
	ParallelOptimizer.h                 \
	ParOptCmd.h                         \
	PBEFunctional.h                     \
	PBERevFunctional.h                  \
	PBESolFunctional.h                  \
	Pblock.h                            \
	PlotCmd.h                           \
        Polarization.h 			    \
	PositionConstraint.h                \
	Preconditioner.h                    \
	PrintCmd.h                          \
	PrintMem.h                          \
	profile.h                           \
	PromoteOccCmd.h                     \
	PSDAWavefunctionStepper.h           \
	PSDWavefunctionStepper.h            \
	qbox_xmlns.h                        \
	QuitCmd.h                           \
	RandomizeRealWfCmd.h                \
	RandomizeVelCmd.h                   \
	RandomizeWfCmd.h                    \
	readTSC.h                           \
	RefCell.h                           \
	release.h                           \
	ResetVcmCmd.h                       \
	RunCmd.h                            \
	RunTimer.h                          \
	Sample.h                            \
	SampleHandler.h                     \
	SampleReader.h                      \
	SampleStepper.h                     \
	SampleWriter.h                      \
	SaveCmd.h                           \
	SavedenCmd.h                        \
	SaveDenFreq.h                       \
	SaveESPCmd.h                        \
	SaveFreq.h                          \
	SavesysCmd.h                        \
	SaveWfFreq.h                        \
	SDAIonicStepper.h                   \
	SDCellStepper.h                     \
	SDIonicStepper.h                    \
	SDWavefunctionStepper.h             \
	SelfConsistentPotential.h           \
	SetCmd.h                            \
	SetVelCmd.h                         \
	SharedFilePtr.h                     \
	ShiftWFCmd.h                        \
	SimpleConvergenceDetector.h         \
	sinft.h                             \
	SlaterDet.h                         \
	Smearing.h                          \
	SmearingWidth.h                     \
	SORKTDWavefunctionStepper.h         \
	SOTDWavefunctionStepper.h           \
	SpeciesCmd.h                        \
	Species.h                           \
	SpeciesHandler.h                    \
	SpeciesReader.h                     \
	SphericalIntegration.h              \
	Spin.h                              \
	Spline.h                            \
	StatusCmd.h                         \
	StrainCmd.h                         \
	Stress.h                            \
	StructuredDocumentHandler.h         \
	StructureFactor.h                   \
	StructureHandler.h                  \
	StrX.h                              \
	SymmetryCmd.h                       \
	Symmetry.h                          \
	SymmetrySet.h                       \
	SymOp.h                             \
	SymOpSet.h                          \
	TDDt.h                              \
	TDEULERWavefunctionStepper.h        \
	TestHandler.h                       \
	Thermostat.h                        \
	ThresholdForce.h                    \
	ThresholdScf.h                      \
	ThresholdStress.h                   \
	ThTemp.h                            \
	ThTime.h                            \
	ThWidth.h                           \
	Timer.h                             \
	TorsionCmd.h                        \
	TorsionConstraint.h                 \
	UnitCell.h                          \
	UnlockCmd.h                         \
	UserInterface.h                     \
	uuid_str.h                          \
	Wavefunction.h                      \
	WavefunctionHandler.h               \
	WavefunctionStepper.h               \
	WfDiag.h                            \
	WfDyn.h                             \
	WfExtrap.h                          \
	WFPhaseRealCmd.h                    \
	WFPhaseRealVar.h                    \
	XCFunctional.h                      \
	Xc.h                                \
	XCPotential.h                       \
	XMLFile.h                           \
	XMLGFPreprocessor.h

libqbLink_a_SOURCES = \
	AtomSet.C                           \
	Atom.C                              \
	SymmetrySet.C                       \
	Symmetry.C                          \
	Species.C                           \
	Wavefunction.C                      \
	SlaterDet.C                         \
	EnergyFunctional.C                  \
	ElectricEnthalpy.C		    \
	SampleStepper.C                     \
	Basis.C                             \
	FourierTransform.C                  \
	Matrix.C                            \
	Context.C                           \
	sinft.C                             \
	Spline.C                            \
	UnitCell.C                          \
	StructureFactor.C                   \
	ChargeDensity.C                     \
	UserInterface.C                     \
	RunCmd.C                            \
	LoadCmd.C                           \
	SaveCmd.C                           \
	SavesysCmd.C                        \
	SavedenCmd.C                        \
	SpeciesCmd.C                        \
	SpeciesReader.C                     \
	SpeciesHandler.C                    \
	XCPotential.C                       \
	LDAFunctional.C                     \
	PBEFunctional.C                     \
	PBESolFunctional.C                  \
	PBERevFunctional.C                  \
	BLYPFunctional.C                    \
	NonLocalPotential.C                 \
	SampleReader.C                      \
	SampleWriter.C                      \
	StructuredDocumentHandler.C         \
	SampleHandler.C                     \
	AtomSetHandler.C                    \
	WavefunctionHandler.C               \
	XMLGFPreprocessor.C                 \
	Base64Transcoder.C                  \
	CPSampleStepper.C                   \
	BOSampleStepper.C                   \
	ParOptCmd.C                         \
	ParallelOptimizer.C                 \
	WavefunctionStepper.C               \
	SDWavefunctionStepper.C             \
	MDWavefunctionStepper.C             \
	SDIonicStepper.C                    \
	MDIonicStepper.C                    \
	BMDIonicStepper.C                   \
	PSDWavefunctionStepper.C            \
	PSDAWavefunctionStepper.C           \
	JDWavefunctionStepper.C             \
	SDCellStepper.C                     \
	ConfinementPotential.C              \
	Preconditioner.C                    \
	SimpleConvergenceDetector.C         \
	MMSpecies.C                         \
	EmpiricalPotential.C                \
	EnthalpyFunctional.C                \
	Hugoniostat.C                       \
	release.C                           \
	qbox_xmlns.C                        \
	isodate.C                           \
	ComputeMLWFCmd.C                    \
	BasisMapping.C                      \
	MLWFTransform.C                     \
	TDMLWFTransform.C		    \
	jacobi_eigenvalue.C		    \
	jade.C                              \
	jade_complex.C			    \
	ConstraintSet.C                     \
	Constraint.C                        \
	DistanceConstraint.C                \
	PositionConstraint.C                \
	AngleConstraint.C                   \
	TorsionConstraint.C                 \
	SaveESPCmd.C                        \
	AndersonMixer.C                     \
	SDAIonicStepper.C                   \
	CGIonicStepper.C                    \
	jacobi.C                            \
	HubbardPotential.C                  \
	SphericalIntegration.C              \
	PrintMem.C                          \
	PlotCmd.C                           \
	SOTDWavefunctionStepper.C           \
	SORKTDWavefunctionStepper.C         \
	FORKTDWavefunctionStepper.C         \
	TDEULERWavefunctionStepper.C        \
	EhrenSampleStepper.C                \
	MDSaveCmd.C                         \
	FCPStepper.C                        \
	ExponentialWavefunctionStepper.C    \
	SelfConsistentPotential.C           \
	clooper.c                           \
	qbLink.C

qball_SOURCES = \
	qb.C

qball_LDADD = \
	libqbLink.a

qball_nruns_SOURCES = \
	qb-nruns.C

qball_nruns_LDADD = \
	libqbLink.a

qball_setupkpts_SOURCES = \
	qb-setupkpts.C                      \
	SymOpSet.C                          \
	SymOp.C

qball_setupkpts_LDADD = \
	libqbLink.a

qballdiff_SOURCES = \
	qbdiff.C

testMatrix_SOURCES = \
	testMatrix.C                        \
	Matrix.C                            \
	Context.C

testBasis_SOURCES = \
	testBasis.C                         \
	Basis.C                             \
	UnitCell.C                          \
	Context.C

testRowBcast_SOURCES = \
	testRowBcast.C                      \
	Context.C

testFourierTransform_SOURCES = \
	testFourierTransform.C              \
	FourierTransform.C                  \
	Basis.C                             \
	UnitCell.C                          \
	Context.C

testBlas_SOURCES = \
	testBlas.C

testGram_SOURCES = \
	testGram.C                          \
	Matrix.C                            \
	Context.C

testGramBlock_SOURCES = \
	testGramBlock.C                     \
	Matrix.C                            \
	Context.C

testPgemm_SOURCES = \
	testPgemm.C                         \
	Matrix.C                            \
	Context.C

testPgemmBlock_SOURCES = \
	testPgemmBlock.C                    \
	Matrix.C                            \
	Context.C

testPzheev_SOURCES = \
	testPzheev.C                        \
	Matrix.C                            \
	Context.C

testEigenSolvers_SOURCES = \
	testEigenSolvers.C                  \
	Matrix.C                            \
	Context.C                           \
	jacobi.C

testEigenBlock_SOURCES = \
	testEigenBlock.C                    \
	Matrix.C                            \
	Context.C                           \
	jacobi.C

xmlSpecies_SOURCES = \
	xmlSpecies.C                        \
	qbox_xmlns.C

xmlget_SOURCES = \
	xmlget.C

xmlextract_SOURCES = \
	xmlextract.C

all: all-am

.SUFFIXES:
.SUFFIXES: .C .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libqbLink.a: $(libqbLink_a_OBJECTS) $(libqbLink_a_DEPENDENCIES) $(EXTRA_libqbLink_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libqbLink.a
	$(AM_V_AR)$(libqbLink_a_AR) libqbLink.a $(libqbLink_a_OBJECTS) $(libqbLink_a_LIBADD)
	$(AM_V_at)$(RANLIB) libqbLink.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

qball$(EXEEXT): $(qball_OBJECTS) $(qball_DEPENDENCIES) $(EXTRA_qball_DEPENDENCIES) 
	@rm -f qball$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qball_OBJECTS) $(qball_LDADD) $(LIBS)

qball-nruns$(EXEEXT): $(qball_nruns_OBJECTS) $(qball_nruns_DEPENDENCIES) $(EXTRA_qball_nruns_DEPENDENCIES) 
	@rm -f qball-nruns$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qball_nruns_OBJECTS) $(qball_nruns_LDADD) $(LIBS)

qball-setupkpts$(EXEEXT): $(qball_setupkpts_OBJECTS) $(qball_setupkpts_DEPENDENCIES) $(EXTRA_qball_setupkpts_DEPENDENCIES) 
	@rm -f qball-setupkpts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qball_setupkpts_OBJECTS) $(qball_setupkpts_LDADD) $(LIBS)

qballdiff$(EXEEXT): $(qballdiff_OBJECTS) $(qballdiff_DEPENDENCIES) $(EXTRA_qballdiff_DEPENDENCIES) 
	@rm -f qballdiff$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qballdiff_OBJECTS) $(qballdiff_LDADD) $(LIBS)

testBasis$(EXEEXT): $(testBasis_OBJECTS) $(testBasis_DEPENDENCIES) $(EXTRA_testBasis_DEPENDENCIES) 
	@rm -f testBasis$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testBasis_OBJECTS) $(testBasis_LDADD) $(LIBS)

testBlas$(EXEEXT): $(testBlas_OBJECTS) $(testBlas_DEPENDENCIES) $(EXTRA_testBlas_DEPENDENCIES) 
	@rm -f testBlas$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testBlas_OBJECTS) $(testBlas_LDADD) $(LIBS)

testEigenBlock$(EXEEXT): $(testEigenBlock_OBJECTS) $(testEigenBlock_DEPENDENCIES) $(EXTRA_testEigenBlock_DEPENDENCIES) 
	@rm -f testEigenBlock$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testEigenBlock_OBJECTS) $(testEigenBlock_LDADD) $(LIBS)

testEigenSolvers$(EXEEXT): $(testEigenSolvers_OBJECTS) $(testEigenSolvers_DEPENDENCIES) $(EXTRA_testEigenSolvers_DEPENDENCIES) 
	@rm -f testEigenSolvers$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testEigenSolvers_OBJECTS) $(testEigenSolvers_LDADD) $(LIBS)

testFourierTransform$(EXEEXT): $(testFourierTransform_OBJECTS) $(testFourierTransform_DEPENDENCIES) $(EXTRA_testFourierTransform_DEPENDENCIES) 
	@rm -f testFourierTransform$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testFourierTransform_OBJECTS) $(testFourierTransform_LDADD) $(LIBS)

testGram$(EXEEXT): $(testGram_OBJECTS) $(testGram_DEPENDENCIES) $(EXTRA_testGram_DEPENDENCIES) 
	@rm -f testGram$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testGram_OBJECTS) $(testGram_LDADD) $(LIBS)

testGramBlock$(EXEEXT): $(testGramBlock_OBJECTS) $(testGramBlock_DEPENDENCIES) $(EXTRA_testGramBlock_DEPENDENCIES) 
	@rm -f testGramBlock$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testGramBlock_OBJECTS) $(testGramBlock_LDADD) $(LIBS)

testMatrix$(EXEEXT): $(testMatrix_OBJECTS) $(testMatrix_DEPENDENCIES) $(EXTRA_testMatrix_DEPENDENCIES) 
	@rm -f testMatrix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testMatrix_OBJECTS) $(testMatrix_LDADD) $(LIBS)

testPgemm$(EXEEXT): $(testPgemm_OBJECTS) $(testPgemm_DEPENDENCIES) $(EXTRA_testPgemm_DEPENDENCIES) 
	@rm -f testPgemm$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testPgemm_OBJECTS) $(testPgemm_LDADD) $(LIBS)

testPgemmBlock$(EXEEXT): $(testPgemmBlock_OBJECTS) $(testPgemmBlock_DEPENDENCIES) $(EXTRA_testPgemmBlock_DEPENDENCIES) 
	@rm -f testPgemmBlock$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testPgemmBlock_OBJECTS) $(testPgemmBlock_LDADD) $(LIBS)

testPzheev$(EXEEXT): $(testPzheev_OBJECTS) $(testPzheev_DEPENDENCIES) $(EXTRA_testPzheev_DEPENDENCIES) 
	@rm -f testPzheev$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testPzheev_OBJECTS) $(testPzheev_LDADD) $(LIBS)

testRowBcast$(EXEEXT): $(testRowBcast_OBJECTS) $(testRowBcast_DEPENDENCIES) $(EXTRA_testRowBcast_DEPENDENCIES) 
	@rm -f testRowBcast$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testRowBcast_OBJECTS) $(testRowBcast_LDADD) $(LIBS)

xmlSpecies$(EXEEXT): $(xmlSpecies_OBJECTS) $(xmlSpecies_DEPENDENCIES) $(EXTRA_xmlSpecies_DEPENDENCIES) 
	@rm -f xmlSpecies$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xmlSpecies_OBJECTS) $(xmlSpecies_LDADD) $(LIBS)

xmlextract$(EXEEXT): $(xmlextract_OBJECTS) $(xmlextract_DEPENDENCIES) $(EXTRA_xmlextract_DEPENDENCIES) 
	@rm -f xmlextract$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xmlextract_OBJECTS) $(xmlextract_LDADD) $(LIBS)

xmlget$(EXEEXT): $(xmlget_OBJECTS) $(xmlget_DEPENDENCIES) $(EXTRA_xmlget_DEPENDENCIES) 
	@rm -f xmlget$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xmlget_OBJECTS) $(xmlget_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AndersonMixer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AngleConstraint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Atom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AtomSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AtomSetHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BLYPFunctional.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BMDIonicStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BOSampleStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Base64Transcoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Basis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BasisMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CGIonicStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CPSampleStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChargeDensity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ComputeMLWFCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConfinementPotential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Constraint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConstraintSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Context.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DistanceConstraint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EhrenSampleStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ElectricEnthalpy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EmpiricalPotential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EnergyFunctional.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EnthalpyFunctional.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExponentialWavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FCPStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FORKTDWavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FourierTransform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HubbardPotential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Hugoniostat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/JDWavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LDAFunctional.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LoadCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MDIonicStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MDSaveCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MDWavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MLWFTransform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TDMLWFTransform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MMSpecies.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NonLocalPotential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PBEFunctional.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PBERevFunctional.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PBESolFunctional.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PSDAWavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PSDWavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParOptCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParallelOptimizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PlotCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PositionConstraint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Preconditioner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrintMem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RunCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SDAIonicStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SDCellStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SDIonicStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SDWavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SORKTDWavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SOTDWavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SampleHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SampleReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SampleStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SampleWriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SaveCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SaveESPCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SavedenCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SavesysCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SelfConsistentPotential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleConvergenceDetector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SlaterDet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Species.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpeciesCmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpeciesHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpeciesReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SphericalIntegration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Spline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StructureFactor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StructuredDocumentHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SymOp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SymOpSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Symmetry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SymmetrySet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TDEULERWavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TorsionConstraint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UnitCell.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UserInterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Wavefunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WavefunctionHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WavefunctionStepper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XCPotential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XMLGFPreprocessor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clooper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isodate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jacobi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jacobi_eigenvalue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jade.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qb-nruns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qb-setupkpts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qbLink.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qbdiff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qbox_xmlns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/release.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sinft.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testBlas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testEigenBlock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testEigenSolvers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testFourierTransform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testGram.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testGramBlock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testPgemm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testPgemmBlock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testPzheev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testRowBcast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlSpecies.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlextract.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlget.Po@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
